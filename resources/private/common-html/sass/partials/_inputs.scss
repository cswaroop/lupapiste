// Support for miscellaneous inputs and other stuff.
// See also _forms.scss.

@mixin input-fields() {
  padding: 0 $marginM;
  box-sizing: border-box;
  min-height: $grid-input-height;
  height: $grid-input-height;
  font-size: $grid-font-size;
  color: $input-color;
  border: 1px solid $input-border-color;
  -webkit-appearance: none;
  -webkit-border-radius: 0px;
  -moz-appearance:none;

  &:focus {
    color: $input-focus-color;
    border-color: $input-focus-border-color;
  }
  &:disabled {
    border-color: $input-disabled-border-color;
    background-color: $input-disabled-background-color;
    cursor: not-allowed;
  }
  &.warning {
    border-color: $negative;
  }
  &.required {
    border-color: $primary;
  }
}

@mixin hide-radio-check-input ($display: inherit) {
  input[type=checkbox], input[type=radio] {
    display: $display;
    opacity: 0;
    width: 0;
    height: 0;
    margin: 0;
    position: absolute;
    font-size: 0;
  }
}

// http://stackoverflow.com/questions/30421570/sass-unicode-escape-is-not-preserved-in-css-file
@function unicode($str) {
  @return unquote("\"") + unquote(str-insert($str, "\\", 1)) + unquote("\"")
}

@mixin placeholder( $color ) {
  input::placeholder {
    color: $color
  }
  input::-ms-input-placeholder {
    color: $color
  }
  textarea::placeholder {
    color: $color
  }
  input::-ms-input-placeholder {
    teextarea: $color
  }
}

// Defines the following classes:
// .cls-label
// .cls-wrapper
// and the definition
// .cls-wrapper.wrapper--disabled
@mixin toggle-helper ($cls, $on, $off,
                      $size: $lupicon-size,
                      $color: $input-color,
                      $icon: $checkbox-color,
                      $hover: $checkbox-hover-color,
                      $selected: $checkbox-selected-color,
                      $disabled: $input-select-disabled-icon,
                      $border: $checkbox-border-color,
                      $disabled-bg: $input-disabled-background-color,
                      $wrapper-display: inherit,
                      $input-display: block,
                      $label-display: inline-block) {
  label.#{$cls}-label {
    width: 100%;
    display: $label-display;
    color: $color;
    padding: {
      left: 7px;
      right: 7px;
      bottom: 7px;
      top: 7px;
    }
  }
  .#{$cls}-label:before {
    @include lupicon-font( $size );
    content: unicode($off);
    display: inline-block;
    margin-right: 10px;
    vertical-align: top;
    color: $icon;
    cursor: pointer;
  }

  .#{$cls}-label:hover.#{$cls}-label:before,
  input:checked + .#{$cls}-label:hover.#{$cls}-label:before {
    color: $hover;
  }

  input:focus + .#{$cls}-label:before {
    color: $hover !important;
  }

  .attachment-batch-table input:focus + .#{$cls}-label:before {
    padding: 3px 3px 4px 3px;
    border: 2px solid $hover;
    border-radius: 16px;
  }

  .attachment-batch-table input:focus + label.#{$cls}-label {
    padding: 0 !important;
  }

  input:checked + .#{$cls}-label:before {
    @include lupicon-font($size);
    content: unicode($on);
    color: $selected;
  }

  input:disabled + .#{$cls}-label:before,
  input:disabled + .#{$cls}-label:hover.#{$cls}-label:before{
    cursor: initial;
    color: $disabled;
  }

  .no-label-text.#{$cls}-label:before {
    margin-right: 0;
  }

  .#{$cls}-wrapper {
    display: $wrapper-display;
    box-sizing: border-box;
    border: 1px solid $border;
    @include hide-radio-check-input ($input-display);
}

  .#{$cls}-wrapper.wrapper--disabled {
    background-color: $disabled-bg;
}
  @content;
}

@include toggle-helper ( arrow, "e614", "e611" ) {}

// Checkboxes
@include toggle-helper ( checkbox, "e604", "e603" ) {}
@include toggle-helper ( blockbox, "e604", "e603", $wrapper-display: block ) {}
@include toggle-helper ( buttonbox, "e604", "e603", $wrapper-display: inline-block ) {}
.buttonbox-wrapper {
  vertical-align: middle;
}

@include toggle-helper ( docgen-checkbox, "e604", "e603", $wrapper-display: block ) {}
.docgen-checkbox-wrapper.form-input {
  height: auto;
  width: auto;
}
@include toggle-helper ( sectionbox, "e61d", "e620" ) {}

@include toggle-helper ( stampbox, "e61e", "e620", $selected: white ) {}
.stampbox-wrapper {
  border: none;
}

@include toggle-helper ( signbox, "e619", "e620" ) {}
.signbox-wrapper {
  border: none;
}


// Radio buttons
@include toggle-helper (radio, "e635", "e634", $wrapper-display: inline-block, $input-display: block) {}

// Radio field component. In order to make sure that the components are adjacent without
// gaps, some adjustments are needed.
@include toggle-helper (radio-field, "e635", "e634", $wrapper-display: inline-block,
                        $input-display: inline-block, $label-display: inline) {}
.radio-field-wrapper {
  padding: 7px 7px 7px 7px;
}

// Wrapper helpers
.wrapper--break {
  margin-bottom: $marginL;
}

.wrapper--break-small {
  margin-bottom: $marginS;
}

.wrapper--block {

}

toggle.no-border > div {
  border: none;
}

// Attachment filters related
@include toggle-helper ( filter, "e604", "e603", $wrapper-display: inline-block, $input-display: block ) {}

.filter-group {
  border: 1px solid $gray187;
  padding: {
    top: 7px;
    left: 7px;
    right: 7px;
    bottom: 14px;
  }
  margin-bottom: 1em;
  .filter-group__state {
    i {
      cursor: pointer;
      color: $primary;
    }
    span {
      text-transform: uppercase;
    }
    &:hover > i {
      color: $checkbox-hover-color;
    }
  }
  .filter-group__toggles {
    margin-left: 2px;
    margin-top: $marginS;
  }
}


.button-input {
  white-space: nowrap;
  input, button {
    vertical-align: middle;
  }
  input {
    // Forcefully override the .form-grid styles.
    width: 50% !important;
    -webkit-appearance: textfield !important;
  }
}

input[type=text].textinput {
  box-sizing: border-box;
  padding: 4px;
  display: block;
  &:focus {
    border-color: $input-focus-border-color;
  }
}

@mixin textinputBig {
  @include btn-height;
  line-height: 1;
  font-size: $font-size;
}

.textinput.textinput--big {
    @include textinputBig;
}

.textinput.textinput--big-long {
    @include textinputBig;
    display: inline-block;
    width: 20em;
    vertical-align: middle;
}

input.dateinput {
  @include input-fields;
  background-image: url("/lp-static/img/calendar-orange-dark.png");
  background-position: right 4px center;
  background-repeat: no-repeat;
  padding-right: 34px;
  width: initial;
  &:focus {
    background-image: url("/lp-static/img/calendar-orange-light.png");
  }
  &:disabled {
    background-image: url("/lp-static/img/calendar-gray187.png");
    color: $input-select-disabled-icon;
    background-repeat: no-repeat;
    background-position: right 4px center;
    padding-right: 34px;
  }
}

.form-grid input.tip.dateinput,
input.tip.dateinput {
  background-image: url("/lp-static/img/calendar-orange.png");
  border-color: $orange-dark;
  &:focus {
    border-color: $input-focus-border-color;
    background-image: url("/lp-static/img/calendar-orange-light.png");
  }
  &:disabled {
    border-color: $input-disabled-border-color;
    background-image: url("/lp-static/img/calendar-gray187.png");
    color: $input-select-disabled-icon
  }
}

input.dateinput.dateinput--small {
  height: 26px;
  background-image: url("/lp-static/img/calendar-12-orange-dark.png");
  min-height: initial;
  font-size: 0.875em;
  &:focus {
    background-image: url("/lp-static/img/calendar-12-orange-light.png");
  }
  &:disabled {
    background-image: url("/lp-static/img/calendar-12-gray187.png");
  }
}

.form-grid input.tip.dateinput.dateinput--small,
input.tip.dateinput.dateinput--small {
  background-image: url("/lp-static/img/calendar-12-orange.png");
  &:focus {
    background-image: url("/lp-static/img/calendar-12-orange-light.png");
  }
  &:disabled {
    background-image: url("/lp-static/img/calendar-12-gray187.png");
  }
}

input.timepicker {
  @include input-fields;
  background-image: url("/lp-static/img/clock-orange-dark.png");
  background-position: right 4px center;
  background-repeat: no-repeat;
  padding-right: 34px;
  width: initial;
  &:focus {
    background-image: url("/lp-static/img/clock-orange-light.png");
  }
  &:disabled {
    background-image: url("/lp-static/img/clock-gray187.png");
    color: $input-select-disabled-icon;
    background-repeat: no-repeat;
    background-position: right 4px center;
    padding-right: 34px;
  }
}

.form-grid input.tip.timepicker,
input.tip.timepicker {
  background-image: url("/lp-static/img/clock-orange.png");
  border-color: $orange-dark;
  &:focus {
    border-color: $input-focus-border-color;
    background-image: url("/lp-static/img/clock-orange-light.png");
  }
  &:disabled {
    border-color: $input-disabled-border-color;
    background-image: url("/lp-static/img/clock-gray187.png");
    color: $input-select-disabled-icon
  }
}

div.timepicker-container {
  width: 50%;
  position: relative;
  input.timepicker-input  {
    width: 100%
  }
  .timepicker-picker {
    position: absolute;
    left: 0;
    top: 100%;
    z-index: 888;
    min-width: 100%;
    width: 100%;
    padding: 4px;
    margin: 0 0;
    border-left: 1px solid $gray51;
    border-right: 1px solid $gray51;
    border-bottom: 1px solid $gray51;
    .timepicker--cell {
      padding: 0 0;
      text-align: center;
    }
    .timepicker--hour {
      width: 16%;
    }
    .timepicker--minute {
      width: 20%;
      border-left: 1px solid $gray51;
    }
    .timepicker--selectable {
      cursor: pointer;
      &:hover {
        background-color: $input-focus-border-color;
      }
    }
    .timepicker--selected {
      color: white;
      background-color: $primary;
    }
  }
}



input.grid-style-input {
  @include input-fields;
  vertical-align: middle;
}

input.grid-style-input--wide {
  @include input-fields;
  width: 100%;
  vertical-align: middle;
}

@mixin input-and-button( $cls, $padding: 8px, $input-width: 20em) {
  $height: $font-size + 2 * $padding;
  .#{$cls} {
    display: table;
    white-space: nowrap;
    > .#{$cls}--input {
      display: table-cell;
      line-height: $height;
      height: $height;
      min-height: $height;
      max-height: $height;
    }
    > input.#{$cls}--input {
      width: $input-width;
      vertical-align: middle;
      padding-right: 4px;
  }
  > button.#{$cls}--input {
    padding: {
      left: $padding;
      right: $padding;
    }
  }
}
@content;
}

drop-zone {
  display: none;
  .drop-zone-placeholder {
    border: 4px dashed $primary !important;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    color: $primary;
    z-index: 200;
    text-align: center;
    background-color: rgba( 255, 255, 255, 0.8);
    padding-top: 2em;
    > div {
      font-size: 20px;
    }
    > i {
      font-size: 60px;
    }
  }
}

.drop-zone--highlight drop-zone {
  display: block;
}

.combobox-container {
  position: relative;
  display: inline-block;
  ul.combobox__list {
    position: absolute;
    left: 0;
    top: 100%;
    z-index: 888;
    min-width: 100%;
    max-width: 200%;
    list-style: none;
    background-color: white;
    border: 1px solid $input-focus-border-color;
    padding: 0;
    white-space: nowrap;
    overflow: hidden;
    li {
      padding-left: $marginS;
    }
    li.combobox--selected {
      background-color: $primary;
      color: white;
    }
  }
}

.upload-zone {
  @include btn-height;
  vertical-align: middle;
  padding: {
    left: 10px;
    right: 10px;
  }
  border: 2px dashed $primary;
  box-sizing: border-box;
  overflow: hidden;
  width: auto;
  display: block;
  i, label {
    color: $orange-link;
  }
  i {
    margin-right: 10px;
  }
  label {
    font-size: 16px;
  }
  label:hover {
    color: $orange-hover;
    cursor: pointer;
  }
  label:active {
    color: $orange-active;
  }
}

@mixin autocomplete( $cls, $width: 20em ) {
    display: inherit;
    #{$cls} {
      min-width: $width;
      max-width: $width;
      display: inline-block;
      vertical-align: middle;
      .autocomplete-selection-wrapper {
        display: table;
        .autocomplete-selection {
          padding-left: 6px;
          display: table-cell;
          vertical-align: middle;
          min-height: $btn-height;
          height: $btn-height;
        }
      }
      span.caption {
        white-space: normal;
        line-height: normal;
        padding-left: 0;
      }
    }
    #{$cls}.no-events {
      .autocomplete-selection-wrapper {
        background-color: $gray246;
        i.tag-chevron, span.selection-text {
          color: $gray187;
        }
      }
    }
}

input.date-validator--invalid {
  border: 1px solid $negative;
}

// Convenience wrapper for labeled input that is not part of any grid
// or similar container.
div.labeled-input {
  margin-top: $marginM;
  margin-bottom: $marginM;
  > label {
    display: block;
  }
  .row {
    display: table-row;
  }
  .cell {
    display: table-cell;
    padding-right: $marginL;
    vertical-align: bottom;
  }
}

.fill-info-toolbar {
  margin: $marginS $marginS;
  > button {margin-right: $btn-spacer;}
}
